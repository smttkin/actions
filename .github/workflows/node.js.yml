name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    - name: Install dependencies
      run: npm ci
      working-directory: ./promotional

    - name: Build project
      run: npm run build --if-present
      working-directory: ./promotional

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: ./promotional/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
    - uses: actions/checkout@v4

    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: ./dist

    - name: FTP Deployment
      uses: airvzxf/ftp-deployment-action@latest
      with:
        server: ${{ secrets.FTP_SERVER }} 
        user:  ${{ secrets.FTP_USERNAME }}
        password:  ${{ secrets.FTP_PASSWORD }}
        local_dir: ./dist # Değiştirildi
        remote_dir: ./

# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    - name: Install dependencies
      run: npm ci
      working-directory: ./promotional

    - name: Build project
      run: npm run build --if-present
      working-directory: ./promotional
      
    - name: List Files After Build
      run: ls -R ./promotional
  deploy:
      needs: build
      runs-on: ubuntu-latest
      name: Deploy
      steps:            

        - uses: actions/checkout@v4
        - name: FTP Deployment
          # You may pin to the exact commit or the version.
          # uses: airvzxf/ftp-deployment-action@5483542d9d0055601ff0bf09c1e552f3a95c9ff8
          uses: airvzxf/ftp-deployment-action@latest
          with:
            # FTP Server.
            server: ${{ secrets.FTP_SERVER }} 
            # FTP User.
            user:  ${{ secrets.FTP_USERNAME }}
            # FTP Password.
            password:  ${{ secrets.FTP_PASSWORD }}
            # Local directory.
            local_dir: ./promotional/dist
            # Remote directory.
            remote_dir: ./
    
        

